<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="pch_8h" kind="file">
    <compoundname>pch.h</compoundname>
    <includes refid="targetver_8h" local="yes">targetver.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">exception</includes>
    <includes local="no">D3d11_4.h</includes>
    <includes local="no">D3DCompiler.h</includes>
    <includes local="no">DirectXMath.h</includes>
    <includes local="no">DirectXColors.h</includes>
    <includes local="no">dxgi1_4.h</includes>
    <includes local="no">wrl.h</includes>
    <includes local="no">shellapi.h</includes>
    <includes refid="_d_x11_helper_8h" local="yes">DX11Helper.h</includes>
    <includedby refid="_d3_d11_engine_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/D3D11Engine.cpp</includedby>
    <includedby refid="_dx11_graphics_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11Graphics.cpp</includedby>
    <includedby refid="_dx11_input_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11Input.cpp</includedby>
    <includedby refid="_dx11_l01_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11L01.cpp</includedby>
    <includedby refid="_dx11_system_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11System.cpp</includedby>
    <includedby refid="pch_8cpp" local="yes">D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.cpp</includedby>
    <incdepgraph>
      <node id="173">
        <label>windows.h</label>
      </node>
      <node id="174">
        <label>stdlib.h</label>
      </node>
      <node id="172">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="184">
        <label>wrl.h</label>
      </node>
      <node id="176">
        <label>string</label>
      </node>
      <node id="180">
        <label>D3DCompiler.h</label>
      </node>
      <node id="178">
        <label>exception</label>
      </node>
      <node id="186">
        <label>DX11Helper.h</label>
        <link refid="_d_x11_helper_8h"/>
      </node>
      <node id="179">
        <label>D3d11_4.h</label>
      </node>
      <node id="183">
        <label>dxgi1_4.h</label>
      </node>
      <node id="171">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>DirectXMath.h</label>
      </node>
      <node id="177">
        <label>iostream</label>
      </node>
      <node id="182">
        <label>DirectXColors.h</label>
      </node>
      <node id="170">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h</label>
        <link refid="pch.h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>shellapi.h</label>
      </node>
      <node id="175">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="192">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11System.cpp</label>
        <link refid="_dx11_system_8cpp"/>
      </node>
      <node id="193">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.cpp</label>
        <link refid="pch_8cpp"/>
      </node>
      <node id="189">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11Graphics.cpp</label>
        <link refid="_dx11_graphics_8cpp"/>
      </node>
      <node id="188">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/D3D11Engine.cpp</label>
        <link refid="_d3_d11_engine_8cpp"/>
      </node>
      <node id="190">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11Input.cpp</label>
        <link refid="_dx11_input_8cpp"/>
      </node>
      <node id="191">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/Dx11L01.cpp</label>
        <link refid="_dx11_l01_8cpp"/>
      </node>
      <node id="187">
        <label>D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h</label>
        <link refid="pch.h"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_d_x_1_1com__exception" prot="public">DX::com_exception</innerclass>
    <innernamespace refid="namespace_d_x">DX</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="pch_8h_1ac7bef5d85e3dcd73eef56ad39ffc84a9" prot="public" static="no">
        <name>WIN32_LEAN_AND_MEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" line="10" column="9" bodyfile="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pch_8h_1a6038f7bdb274c2e159988a57dedbf93d" prot="public" static="no">
        <name>SAFE_RELEASE</name>
        <param><defname>p</defname></param>
        <initializer>if (p) { (p)-&gt;Release(); p = nullptr; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" line="48" column="9" bodyfile="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pch_8h_1a8f8e54802fab80c0758d73d4b406c7c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void SafeRelease</definition>
        <argsstring>(T &amp;ptr)</argsstring>
        <name>SafeRelease</name>
        <param>
          <type>T &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" line="43" column="1" bodyfile="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>pch.h<sp/>:<sp/>标准系统包含文件的包含文件，</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>或是经常使用但不常更改的</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>特定于项目的包含文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="targetver_8h" kindref="compound">targetver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="pch_8h_1ac7bef5d85e3dcd73eef56ad39ffc84a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIN32_LEAN_AND_MEAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>从<sp/>Windows<sp/>头中排除极少使用的资料</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="comment">//<sp/>Windows<sp/>头文件:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>运行时头文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>在此处引用程序需要的其他头文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;D3d11_4.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;D3DCompiler.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DirectXMath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DirectXColors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dxgi1_4.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shellapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_x11_helper_8h" kindref="compound">DX11Helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;d3d11.lib&quot;)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;dxgi.lib&quot;)</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;d3dcompiler.lib&quot;)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>comment(lib,<sp/>&quot;winmm.lib&quot;)</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="pch_8h_1a8f8e54802fab80c0758d73d4b406c7c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pch_8h_1a8f8e54802fab80c0758d73d4b406c7c6" kindref="member">SafeRelease</ref>(T&amp;<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;Release();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48" refid="pch_8h_1a6038f7bdb274c2e159988a57dedbf93d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFE_RELEASE(p)<sp/>if<sp/>(p)<sp/>{<sp/>(p)-&gt;Release();<sp/>p<sp/>=<sp/>nullptr;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="namespace_d_x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DX</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="namespace_d_x_1ab44b2884574bb0ff945ab324dc613ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_x_1ab44b2884574bb0ff945ab324dc613ad9" kindref="member">ThrowIfFailed1</ref>(HRESULT<sp/>hr)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>breakpoint<sp/>on<sp/>this<sp/>line<sp/>to<sp/>catch<sp/>DirectX<sp/>API<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::exception();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>for<sp/>COM<sp/>exceptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_d_x_1_1com__exception" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_x_1_1com__exception" kindref="compound">com_exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66" refid="class_d_x_1_1com__exception_1aa1867f0d21fb5d5cdac40d79cfa07ffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_x_1_1com__exception_1aa1867f0d21fb5d5cdac40d79cfa07ffb" kindref="member">com_exception</ref>(HRESULT<sp/>hr)<sp/>:<sp/><ref refid="class_d_x_1_1com__exception_1a12139fe38e9d75dc96ff41a6d8bb633c" kindref="member">result</ref>(hr)<sp/>{}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_d_x_1_1com__exception_1aec8c85514b6908b1ddc794d7ed18e9e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_d_x_1_1com__exception_1aec8c85514b6908b1ddc794d7ed18e9e5" kindref="member">what</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s_str[64]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf_s(s_str,<sp/></highlight><highlight class="stringliteral">&quot;Failure<sp/>with<sp/>HRESULT<sp/>of<sp/>%08X&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;unsigned<sp/>int&gt;(<ref refid="class_d_x_1_1com__exception_1a12139fe38e9d75dc96ff41a6d8bb633c" kindref="member">result</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_str;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="class_d_x_1_1com__exception_1a12139fe38e9d75dc96ff41a6d8bb633c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRESULT<sp/><ref refid="class_d_x_1_1com__exception_1a12139fe38e9d75dc96ff41a6d8bb633c" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>utility<sp/>converts<sp/>D3D<sp/>API<sp/>failures<sp/>into<sp/>exceptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespace_d_x_1a34ea2bf68f21deaeea61bf5e5adddd4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_x_1a34ea2bf68f21deaeea61bf5e5adddd4e" kindref="member">ThrowIfFailed2</ref>(HRESULT<sp/>hr)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_d_x_1_1com__exception" kindref="compound">com_exception</ref>(hr);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Documents/VS2017/repos/Dx11/Dx11L01/pch.h"/>
  </compounddef>
</doxygen>
